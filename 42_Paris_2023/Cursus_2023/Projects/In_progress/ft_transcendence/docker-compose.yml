services:
  edge:
    image: nginx:1.27-alpine
    container_name: ft_edge
    depends_on:
      - api-gateway
      - auth
      - game
      - chat
      - matchmaking
      - webapp
    ports:
      - "${EDGE_HTTP_PORT}:80"
      - "${EDGE_HTTPS_PORT}:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro   # <â€” NOUVEAU
      - ./docker/certs:/etc/nginx/certs:ro
    restart: unless-stopped
    
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: ft_gateway
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${GATEWAY_PORT}
      - JWT_PUBLIC_KEY_PATH=${JWT_PUBLIC_KEY_PATH}
    expose:
      - "${GATEWAY_PORT}"
    restart: unless-stopped

  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: ft_auth
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${AUTH_PORT}
      - AUTH_DB_PATH=${AUTH_DB_PATH}
      - JWT_PRIVATE_KEY_PATH=${JWT_PRIVATE_KEY_PATH}
      - JWT_PUBLIC_KEY_PATH=${JWT_PUBLIC_KEY_PATH}
    volumes:
      - ./data/auth:/data
      - ./secrets:/secrets:ro
    expose:
      - "${AUTH_PORT}"
    restart: unless-stopped

  game:
    build:
      context: ./services/game
      dockerfile: Dockerfile
    container_name: ft_game
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${GAME_PORT}
    expose:
      - "${GAME_PORT}"
    restart: unless-stopped

  chat:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
    container_name: ft_chat
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${CHAT_PORT}
    expose:
      - "${CHAT_PORT}"
    restart: unless-stopped

  matchmaking:
    build:
      context: ./services/matchmaking
      dockerfile: Dockerfile
    container_name: ft_match
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${MATCH_PORT}
    expose:
      - "${MATCH_PORT}"
    restart: unless-stopped

  # webapp statique servie par nginx interne (8080)
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: ft_webapp
    expose:
      - "${WEBAPP_PORT}"
    restart: unless-stopped

networks:
  default:
    name: ft_net
